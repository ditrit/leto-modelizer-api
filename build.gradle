plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'checkstyle'
	id 'com.github.ben-manes.versions' version '0.50.0'
	id 'org.sonarqube' version '4.4.1.3373'
	id 'com.adarshr.test-logger' version '4.0.0'
	id 'jacoco'
}

group = 'com.ditrit'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jersey'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-core:10.5.0'
	implementation "org.flywaydb:flyway-database-postgresql:10.5.0"
	implementation 'commons-lang:commons-lang:2.6'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql:42.7.1'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
	testImplementation 'org.testcontainers:postgresql:1.19.3'
	testImplementation 'io.cucumber:cucumber-java:7.15.0'
	testImplementation 'io.cucumber:cucumber-junit:7.15.0'
	testImplementation 'org.junit.vintage:junit-vintage-engine'
}

tasks.named('test') {
	useJUnitPlatform {
		includeTags "unit", "integration"
	}
	systemProperty("cucumber.junit-platform.naming-strategy", "long")
	finalizedBy jacocoTestReport
}

tasks.register("unitTest", Test) {
	mustRunAfter check
	useJUnitPlatform {
		includeTags "unit"
	}
	finalizedBy jacocoTestReport
}

tasks.register("integrationTest", Test) {
	useJUnitPlatform {
		includeTags "integration"
	}
	systemProperty("cucumber.junit-platform.naming-strategy", "long")
	mustRunAfter check
}

checkstyle {
	toolVersion = '10.12.5'
	configFile = file("${project.rootDir}/checkstyle.xml")
	sourceSets = [sourceSets.main]
}

configurations {
	cucumberRuntime {
		extendsFrom testImplementation
	}
}

jacoco {
	toolVersion = "0.8.11"
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

sonar {
	properties {
		property "sonar.projectKey", "ditrit_leto-modelizer-api"
		property "sonar.organization", "ditrit"
		property "sonar.projectName", "leto-modelizer-api"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
	}
}
