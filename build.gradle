plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'checkstyle'
	id 'com.github.ben-manes.versions' version '0.51.0'
	id 'org.sonarqube' version '5.1.0.4882'
	id 'com.adarshr.test-logger' version '4.0.0'
	id 'jacoco'
	id 'idea'
	id "info.solidsoft.pitest" version "1.15.0"
}

idea {
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

group = 'com.ditrit'
version = '1.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jersey'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.session:spring-session-jdbc:3.3.2'
	implementation 'org.flywaydb:flyway-core:10.20.0'
	implementation "org.flywaydb:flyway-database-postgresql:10.20.0"
	implementation 'commons-lang:commons-lang:2.6'
	implementation 'commons-beanutils:commons-beanutils:1.9.4'
	implementation 'com.github.erosb:json-sKema:0.18.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql:42.7.4'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.cucumber:cucumber-java:7.20.1'
	testImplementation 'io.cucumber:cucumber-junit:7.20.1'
	testImplementation 'org.junit.vintage:junit-vintage-engine:5.11.2'
}

tasks.named('test') {
	useJUnitPlatform()
	systemProperty("cucumber.junit-platform.naming-strategy", "long")
	finalizedBy jacocoTestReport
}

checkstyle {
	toolVersion = '10.12.5'
	configFile = file("${project.rootDir}/checkstyle.xml")
	sourceSets = [sourceSets.main]
}

configurations {
	cucumberRuntime {
		extendsFrom testImplementation
	}
}

jacoco {
	toolVersion = "0.8.11"
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

sonar {
	properties {
		property "sonar.projectKey", "ditrit_leto-modelizer-api"
		property "sonar.organization", "ditrit"
		property "sonar.projectName", "leto-modelizer-api"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.pitest.reportsDirectory", "build/reports/pitest"
	}
}

pitest {
	junit5PluginVersion = '1.2.1'
	pitestVersion = '1.15.2'
	excludedTestClasses = ['com.ditrit.letomodelizerapi.cucumber.RunCucumberTest', 'com.ditrit.letomodelizerapi.cucumber.StepDefinitions']
}
